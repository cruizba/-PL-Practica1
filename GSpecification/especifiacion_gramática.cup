/********************************************************************/
/********************************************************************/
/***** 		Autores: Carlos Ruiz Ballesteros (GII + MAT)		*****/
/*****			 Hector Ruiz Poveda	(GII + GIS)      			*****/
/********************************************************************/
/********************************************************************/


import java_cup.runtime.*;
parser code{:
	@Override 
	public void syntax_error(Symbol s) { 
		int l = s.left + 1;
		int c = s.right + 1;
		report_error(" La Cadena: " + s.value + " Ha producido un error de sintaxis en la linea " + l + " columna " + c, null); 
	}
	@Override 
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
		report_fatal_error(" La Cadena: " + s.value + " esta fuera de contexto.", null); 
	}
:};

terminal program, begin, end, const, var, procedure, function, type, array, of, record;
terminal if_tok, then, while_tok, do_tok, for_tok, to, case_tok, integer, real, character;
terminal two_points, semicolon, dot, coma, equal, open_parenthesis, closed_parenthesis, assignment, lt, gt, le, ge;
terminal not_equal, plus, minus, multip, div, mod, or, and, not;
terminal identifier, numeric_integer_const, numeric_real_const, hexa_real_const, hexa_integer_const, string_const;

non terminal PRG, BLQ, DCLLIST, SENTLIST;
non terminal DCL, CTELIST, SIMPVALUE, DEFVAR, DEFVARLIST, VARLIST, DEFPROC, DEFFUN, FORMAL_PARAMLIST, FORMAL_PARAM, TBAS;
non terminal SENT, ASIG, ID, EXP, OP, OPCOMP, OPARIT, OPLOG, FACTOR, SUBPARAMLIST, EXPLIST, PROC_CALL, EXEBLQ, DCLLIST_BLQ, DCL_BLQ;

